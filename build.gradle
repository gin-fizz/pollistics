buildscript {
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.2.RELEASE")
    classpath("com.moowork.gradle:gradle-node-plugin:1.0.1")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'
apply plugin: 'com.moowork.node'
apply from: "$rootDir/gradle/integTest.gradle"

task appNpmInstall(type: NpmTask) {
    description = "Installs dependencies from package.json"
    workingDir = file("${project.projectDir}/src/main/resources")
    args = ['install']
}

task appNpmBuild(type: NpmTask) {
    description = "Builds packages from package.json"
    workingDir = file("${project.projectDir}/src/main/resources")
    args = ['run', 'build']
}

jar {
	baseName = 'pollistics'
	version =  '0.0.1'
}

repositories {
	mavenCentral()
	jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	compile("org.jtwig:jtwig-spring-boot-starter:5.63")
	compile("org.jtwig:jtwig-hot-reloading-extension:1.35")
	compile("org.jtwig:jtwig-spring-asset-extension:1.+")
	compile("org.springframework.boot:spring-boot-starter-data-mongodb")
	compile("org.springframework.boot:spring-boot-devtools")
	compile("org.springframework:spring-core")
	compile("org.springframework.boot:spring-boot-starter-security")
	testCompile("org.springframework.boot:spring-boot-starter-test")
	testCompile("org.springframework.security:spring-security-test")
	testCompile("junit:junit")
	testCompile(group: 'nl.jqno.equalsverifier', name: 'equalsverifier', version: '2.1.6')
}
build.dependsOn appNpmInstall
build.dependsOn appNpmBuild

bootRun.dependsOn appNpmInstall
bootRun.dependsOn appNpmBuild

test {
	testLogging {
		events "PASSED", "FAILED", "SKIPPED"
		exceptionFormat = 'full'
	}
}

jacocoTestReport {
	reports {
		xml.enabled = true
		html.enabled = true
	}
}

check.dependsOn jacocoTestReport
