{% extends "../layouts/main.twig" %}

{% block pageTitle %}{{ poll.title }}{% endblock %}
{% block description %}{{ poll.title }} {{ poll.options }}{% endblock %}

{% block content %}
	<h1>{{ poll.title }}</h1>
	<div id="results"></div>

	<div class="social">
		<div class="social--item">
			<a href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fpollistics.com%2F{% if poll.slug is empty %}{{ poll.id }}{% else %}{{ poll.slug }}{% endif %}&quote={{poll.title|url_encode}}" target="_blank" rel="noopener" class="cta">share on facebook</a>
			<a href="https://twitter.com/intent/tweet?text={{ poll.title ~ "\n\n" ~ "via Pollistics â€” https://pollistics.com/" | url_encode }}{% if poll.slug is empty %}{{ poll.id }}{% else %}{{ poll.slug }}{% endif %}" target="_blank" rel="noopener" class="cta">share on twitter</a>
		</div>
		<div class="social--item" id="social"></div>
	</div>
{% endblock %}

{% block scripts %}
	<style>
		.arc text {
			font: 10px sans-serif;
			text-anchor: middle;
			color:white;
		}

		.arc path {
			stroke: #fff;
		}
	</style>
	<style>

		.toolTip {
			font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
			position: absolute;
			display: none;
			width: auto;
			height: auto;
			background: none repeat scroll 0 0 white;
			border: 0 none;
			border-radius: 8px 8px 8px 8px;
			box-shadow: -3px 3px 15px #888888;
			color: black;
			font: 12px sans-serif;
			padding: 5px;
			text-align: center;
		}

		text {
			font: 10px sans-serif;
			color: white;
		}
		text.value {
			font-size: 100%;
			fill: white;
		}

		.axisHorizontal path{
			fill: none;
		}

		.axisHorizontal .tick line {
			stroke-width: 1;
			stroke: rgba(0, 0, 0, 0.2);
		}

		.bar {
			fill: steelblue;
			fill-opacity: .9;
		}

	</style>
	<script src="{{ asset('node_modules/d3/build/d3.min.js') }}"></script>
	<script src="{{ asset('node_modules/d3-tip/index.js') }}"></script>
	<script>
		var data = []; // todo: do this with jsonify stuff
		{% for option, nVotes in poll.options -%}
		data.push({label: "{{option}}", value: {{ nVotes }}});
		{% endfor %}

		var pieDiv = d3.select("body").append("div").attr("class", "toolTip");

		const pieWidth = 500;
		const pieHeight = 500;
		const pieRadius = Math.min(pieWidth, pieHeight) / 2;

		function getRandomColor() {
			var letters = '0123456789ABCDEF';
			var color = '#';
			for (var i = 0; i < 6; i++ ) {
				color += letters[Math.floor(Math.random() * 16)];
			}
			return color;
		}

		const arc = d3.arc()
			.outerRadius(pieRadius - 10)
			.innerRadius(pieRadius - 70);

		const pie = d3.pie()
			.sort(null)
			.value(d => d.value);

		const svgPie = d3.select("body").append("svg")
			.attr("width", pieWidth)
			.attr("height", pieHeight)
			.append("g")
			.attr("transform", `translate(${pieWidth / 2},${pieHeight / 2})`);

		const g = svgPie.selectAll(".arc")
			.data(pie(data))
			.enter().append("g")
			.attr("class", "arc");

		g.append("path")
			.attr("d", arc)
			.style("fill", d => getRandomColor(d.data.label));

		g
			.on("mousemove", function(d){
				pieDiv.style("left", d3.event.pageX+10+"px");
				pieDiv.style("top", d3.event.pageY-25+"px");
				pieDiv.style("display", "inline-block");
				pieDiv.html((d.data.label)+"<br>"+(d.value)+"Vote(s)");
			});

		g
			.on("mouseout", function(d){
				pieDiv.style("display", "none");
			});
		g.append("text")
			.attr("transform", (d) => {
				console.log(d);
				return `translate(${arc.centroid(d)})`;
			})
			.attr("dy", ".35em")
			.text((d) => d.data.label)
			.attr("class", "value");

	</script>
	<script>
		var div = d3.select("body").append("div").attr("class", "toolTip");

		var axisMargin = 20,
			margin = 40,
			valueMargin = 4,
			width = parseInt(d3.select('body').style('width'), 10),
			height = parseInt(d3.select('body').style('height'), 10),
			barHeight = (height-axisMargin-margin*2)* 0.7/data.length,
			barPadding = (height-axisMargin-margin*2)*0.3/data.length,
			data, bar, svg, scale, xAxis, labelWidth = 0;

		max = d3.max(data, function(d) { return d.value; });

		svg = d3.select('body')
			.append("svg")
			.attr("width", width)
			.attr("height", height);


		bar = svg.selectAll("g")
			.data(data)
			.enter()
			.append("g");

		bar.attr("class", "bar")
			.attr("cx",0)
			.attr("transform", function(d, i) {
				return "translate(" + margin + "," + (i * (barHeight + barPadding) + barPadding) + ")";
			});

		bar.append("text")
			.attr("class", "label")
			.attr("y", barHeight / 2)
			.attr("dy", ".35em") //vertical align middle
			.text(function(d){
				return d.label;
			}).each(function() {
			labelWidth = Math.ceil(Math.max(labelWidth, this.getBBox().width));
		});

		scale = d3.scaleLinear()
			.domain([0, max + max *0.20])
			.range([0, width - margin*2 - labelWidth]);

		xAxis = d3.axisBottom()
			.scale(scale)
			.tickSize(-height + 2*margin + axisMargin)

		bar.append("rect")
			.attr("transform", "translate("+labelWidth+", 0)")
			.attr("height", barHeight)
			.attr("width", function(d){
				return scale(d.value);
			});

		bar.append("text")
			.attr("class", "value")
			.attr("y", barHeight / 2)
			.attr("dx", -valueMargin + labelWidth) //margin right
			.attr("dy", ".35em") //vertical align middle
			.attr("text-anchor", "end")
			.text(function(d){
				return (d.value+" Vote(s)");
			})
			.attr("x", function(d){
				var width = this.getBBox().width;
				return Math.max(width + valueMargin, scale(d.value));
			});

		bar
			.on("mousemove", function(d){
				div.style("left", d3.event.pageX+10+"px");
				div.style("top", d3.event.pageY-25+"px");
				div.style("display", "inline-block");
				div.html((d.label)+"<br>"+(d.value)+"Vote(s)");
			});
		bar
			.on("mouseout", function(d){
				div.style("display", "none");
			});

		svg.insert("g",":first-child")
			.attr("class", "axisHorizontal")
			.attr("transform", "translate(" + (margin + labelWidth) + ","+ (height - axisMargin - margin)+")")
			.call(xAxis);

	</script>
	<script src="/js/dist/results.js"></script>
{% endblock %}
